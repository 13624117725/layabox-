var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
				value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _Letterfirst = require("./start/Letterfirst");

var _Letterfirst2 = _interopRequireDefault(_Letterfirst);

var _LetterNum = require("./start/LetterNum");

var _LetterNum2 = _interopRequireDefault(_LetterNum);

var _Lettersecond = require("./start/Lettersecond");

var _Lettersecond2 = _interopRequireDefault(_Lettersecond);

var _Loading = require("./start/Loading");

var _Loading2 = _interopRequireDefault(_Loading);

var _peopleList = require("./start/peopleList");

var _peopleList2 = _interopRequireDefault(_peopleList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
				function GameConfig() {
								_classCallCheck(this, GameConfig);
				}

				_createClass(GameConfig, null, [{
								key: "init",
								value: function init() {
												//注册Script或者Runtime引用
												var reg = Laya.ClassUtils.regClass;
												reg("start/Letterfirst.js", _Letterfirst2.default);
												reg("start/LetterNum.js", _LetterNum2.default);
												reg("start/Lettersecond.js", _Lettersecond2.default);
												reg("start/Loading.js", _Loading2.default);
												reg("start/peopleList.js", _peopleList2.default);
								}
				}]);

				return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "Loading.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./start/LetterNum":3,"./start/Letterfirst":4,"./start/Lettersecond":5,"./start/Loading":6,"./start/peopleList":7}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Main = function () {
	function Main() {
		_classCallCheck(this, Main);

		//根据IDE设置初始化引擎		
		if (window["Laya3D"]) Laya3D.init(_GameConfig2.default.width, _GameConfig2.default.height);else Laya.init(_GameConfig2.default.width, _GameConfig2.default.height, Laya["WebGL"]);
		Laya["Physics"] && Laya["Physics"].enable();
		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
		Laya.stage.scaleMode = _GameConfig2.default.scaleMode;
		Laya.stage.screenMode = _GameConfig2.default.screenMode;
		Laya.stage.alignV = _GameConfig2.default.alignV;
		Laya.stage.alignH = _GameConfig2.default.alignH;

		//兼容微信不支持加载scene后缀场景
		Laya.URL.exportSceneToJson = _GameConfig2.default.exportSceneToJson;

		//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
		if (_GameConfig2.default.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
		if (_GameConfig2.default.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
		if (_GameConfig2.default.stat) Laya.Stat.show();
		Laya.alertGlobalError = true;

		//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
		Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
	}

	_createClass(Main, [{
		key: "onVersionLoaded",
		value: function onVersionLoaded() {
			//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
			Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
		}
	}, {
		key: "onConfigLoaded",
		value: function onConfigLoaded() {
			//加载IDE指定的场景
			_GameConfig2.default.startScene && Laya.Scene.open(_GameConfig2.default.startScene);
		}
	}]);

	return Main;
}();
//激活启动类


new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LetterNum = function (_Laya$Scene) {
    _inherits(LetterNum, _Laya$Scene);

    function LetterNum() {
        _classCallCheck(this, LetterNum);

        var _this = _possibleConstructorReturn(this, (LetterNum.__proto__ || Object.getPrototypeOf(LetterNum)).call(this));

        _this.nx = 6;
        _this.ny = 8;
        _this.Imgname = 'oneImg';
        _this.empty = '&nbsp;';
        _this.timers = null;
        _this.maxTime = 60;
        _this.maxTimeTemp = _this.maxTime;
        _this.isSuccess = false;
        _this.selectedCell = null;
        _this.cellArray = [];
        _this.pathStack = [];

        // 引入图片
        var asset = [{
            url: ["comp/001.png", "comp/002.png", "comp/003.png", "comp/004.png", "comp/005.png", "comp/006.png", "comp/007.png", "comp/008.png", "comp/009.png", "comp/sandian.png", "comp/p0.png", "comp/p1.png", "comp/p2.png", "comp/p3.png", "comp/p4.png", "comp/p5.png", "comp/success.png", "comp/failed.png"],
            type: Laya.Loader.IMAGE
        }, {
            url: ["comp/lining.mp3", 'https://img.guoanfamily.com/yuandan19/success.mp3', "https://img.guoanfamily.com/yuandan19/fail.mp3"],
            type: Laya.Loader.SOUND
        }];

        var lightning = "comp/sandian.png";
        // 加载图片。
        Laya.loader.load(asset, laya.utils.Handler.create(_this, _this.InitializationFn));

        // 小图片的数组对象
        _this.symbols1 = [{ key: '001', value: 'comp/001.png' }, { key: '002', value: 'comp/002.png' }, { key: '003', value: 'comp/003.png' }, { key: '004', value: 'comp/004.png' }, { key: '005', value: 'comp/005.png' }, { key: '006', value: 'comp/006.png' }, { key: '007', value: 'comp/007.png' }, { key: '008', value: 'comp/008.png' }, { key: '009', value: 'comp/009.png' }];
        // 事坐标位置
        _this.StartX = 50, _this.StartY = 220;
        _this.count = _this.nx * _this.ny;
        _this.empty = '&nbsp;';
        _this.clickcosttime = 0;
        return _this;
    }
    // 初始化页面样式方法


    _createClass(LetterNum, [{
        key: 'InitializationFn',
        value: function InitializationFn(pr) {
            // 打乱数组，放到页面上面
            var stateImg;
            var newArr = [];
            // 头部的空数组
            var xOne = -40;
            var yOne = 130;
            var topArr = [];
            for (var _i = 0; _i < 8; _i++) {
                var stateImgeNull = new Laya.Sprite();
                stateImgeNull.width = 90;
                stateImgeNull.height = 90;
                stateImgeNull.pos(xOne, yOne);
                stateImgeNull.innerHTML = this.empty;
                stateImgeNull.c_y = 0;
                stateImgeNull.c_x = _i;
                this.LetterNum.addChild(stateImg);
                topArr.push(stateImgeNull);
                xOne += 90;
            }

            var endX = -40;
            var endY = 940;
            var bottomArr = [];
            for (var _i2 = 0; _i2 < 8; _i2++) {
                var stateImgeNull = new Laya.Sprite();
                stateImgeNull.width = 90;
                stateImgeNull.height = 90;
                stateImgeNull.pos(endX, endY);
                stateImgeNull.c_x = (endX + 40) / 90;
                stateImgeNull.c_y = 9;
                stateImgeNull.innerHTML = this.empty;
                this.LetterNum.addChild(stateImg);
                bottomArr.push(stateImgeNull);
                endX += 90;
            }
            // console.log('xixixi',bottomArr);

            var all = this.count = this.nx * this.ny;
            var halfAll = all / 2;
            var tmp = [];
            // 生成随机数组
            for (var i = 0; i < halfAll; i++) {
                var stateNum = Math.floor(Math.random() * this.symbols1.length);
                var c = this.symbols1[stateNum];
                tmp.push(c);
                tmp.push(c);
            }

            for (var i = all - 1; i >= 0; i--) {
                var r = Math.floor(Math.random() * i);
                var c = tmp.splice(r, 1);
                var y = Math.floor(i / this.nx);
                var x = i - y * this.nx;
                // 图片
                var Imgurl = Laya.loader.getRes(c[0].value);
                stateImg = new Laya.Sprite();
                stateImg.width = 90;
                stateImg.height = 90;

                // 初始时候的空边框。
                if (this.StartX == 50) {
                    var stateImg1 = new Laya.Sprite();
                    stateImg1.width = 90;
                    stateImg1.height = 90;

                    stateImg1.pos(this.StartX - 90, this.StartY);
                    stateImg1.innerHTML = this.empty;
                    stateImg1.c_x = 0;
                    stateImg1.c_y = Math.floor(stateImg1._y / 90) - 1;
                    this.LetterNum.addChild(stateImg1);
                    newArr.push(stateImg1);
                }
                stateImg.pos(this.StartX, this.StartY);
                stateImg.name = this.Imgname + i;
                stateImg.innerHTML = c[0].key; //唯一标识
                stateImg.Imsrc = c[0].value;
                stateImg.c_x = Math.floor((stateImg._x + 90) / 90);
                stateImg.c_y = Math.floor((stateImg._y - 90) / 90);
                Imgurl.width = 80;
                Imgurl.height = 80;
                stateImg.graphics.drawTexture(Imgurl, 5, 5);
                stateImg.on(laya.events.Event.MOUSE_UP, this, this.onCellClicked);
                this.LetterNum.addChild(stateImg);
                newArr.push(stateImg);
                this.StartX += 90;

                if (this.StartX >= 590) {
                    var stateImg2 = new Laya.Sprite();
                    stateImg2.width = 90;
                    stateImg2.height = 90;
                    stateImg2.pos(this.StartX, this.StartY);
                    stateImg2.innerHTML = this.empty;
                    stateImg2.c_x = 7;
                    stateImg2.c_y = (this.StartY - 220) / 90 + 1;

                    this.LetterNum.addChild(stateImg2);
                    newArr.push(stateImg2);
                    var arr = newArr.map(function (item) {
                        return item;
                    });
                    this.cellArray.push(arr);
                    newArr = [];
                    this.StartX = 50;
                    this.StartY += 90;
                }
            }
            this.cellArray.unshift(topArr);
            this.cellArray.push(bottomArr);
            this.setbars(pr);
        }
        // 图片的点击事件方法

    }, {
        key: 'onCellClicked',
        value: function onCellClicked(e) {

            var timestamp = new Date().getTime();
            if (timestamp - this.clickcosttime < 10) {
                this.clickcosttime = timestamp;
                return false;
            }
            this.clickcosttime = timestamp;
            // 点击高亮
            if (e.target && e.target.innerHTML) {
                this.applayFilter(e.target);
            }

            if (e.currentTarget.innerHTML == this.empty) {
                return;
            }
            if (this.selectedCell) {
                // debugger;
                // this.selectedCell 是起始对象
                this.tryMatch(this.selectedCell, e.currentTarget);
                // 需要在这里改变图标选中样式
                // selectedCell.setAttribute('class', 'cell');
                this.selectedCell = null;
            } else {
                this.selectedCell = e.currentTarget;
                // 这里是需要改变第一个目标点的样式
                // selectedCell.setAttribute('class', 'cell selected');
            }
        }
    }, {
        key: 'changeImg',
        value: function changeImg(ca) {
            var _this2 = this;

            var stateImg1 = new Laya.Sprite();
            stateImg1.width = 103;
            stateImg1.height = 103;
            stateImg1.pos(ca._x - 4, ca._y - 4);

            var caImg = ca.Imsrc;
            ca.graphics.clear();

            var Imgurl2 = Laya.loader.getRes("comp/sandian.png");
            Imgurl2.width = 115;
            Imgurl2.height = 115;
            stateImg1.graphics.drawTexture(Imgurl2, -6, -6);
            this.LetterNum.addChild(stateImg1);

            if (caImg) {
                var stateImg2 = new Laya.Sprite();
                stateImg2.width = 90;
                stateImg2.height = 90;
                stateImg2.pos(ca._x, ca._y);

                stateImg2.c_x = ca.c_x;
                stateImg2.c_y = ca.c_y;

                var Imgurl21 = Laya.loader.getRes(caImg);
                Imgurl21.width = 80;
                Imgurl21.height = 80;

                stateImg2.graphics.drawTexture(Imgurl21, 5, 5);
                this.LetterNum.addChild(stateImg2);
                var timer = setTimeout(function () {
                    _this2.makeNullBox(stateImg2);
                    stateImg2.graphics.clear();
                    stateImg1.graphics.clear();
                    window.clearTimeout(timer);
                }, 160);
            }
        }
    }, {
        key: 'makepath',
        value: function makepath(arr) {
            var _this3 = this;

            var ti = 0,
                tp = ["comp/p0.png", "comp/p1.png", "comp/p2.png", "comp/p3.png", "comp/p4.png", "comp/p5.png"];

            arr.forEach(function (items, index) {
                if (index == 0 || index == arr.length - 1) {
                    return false;
                }
                // 纵向
                if (arr[index - 1].c_x == items.c_x) {
                    // 上一个盒子在上
                    if (arr[index - 1].c_y < items.c_y) {
                        // 下一项在下
                        if (arr[index + 1].c_x == items.c_x && arr[index + 1].c_y > items.c_y) {
                            ti = 1;
                        }
                        // 下一项在左边
                        if (arr[index + 1].c_x < items.c_x) {
                            ti = 4;
                        }
                        // 下一项在右边
                        if (arr[index + 1].c_x > items.c_x) {
                            ti = 5;
                        }
                    }
                    // 上一个盒子在下
                    if (arr[index - 1].c_y > items.c_y) {
                        // 下一项在上
                        if (arr[index + 1].c_x == items.c_x && arr[index + 1].c_y < items.c_y) {
                            ti = 1;
                        }
                        // 下一项在左边
                        if (arr[index + 1].c_x < items.c_x) {
                            ti = 2;
                        }
                        // 下一项在右边
                        if (arr[index + 1].c_x > items.c_x) {
                            ti = 3;
                        }
                    }
                }
                // 横向
                if (arr[index - 1].c_y == items.c_y) {
                    //上个盒子在左边
                    if (arr[index - 1].c_x < items.c_x) {
                        // 下一个盒子在右
                        if (arr[index + 1].c_y == items.c_y && arr[index + 1].c_x > items.c_x) {
                            ti = 0;
                        }
                        // 下一个盒子在上
                        if (arr[index + 1].c_y < items.c_y) {
                            ti = 4;
                        }
                        // 下一个盒子在下
                        if (arr[index + 1].c_y > items.c_y) {
                            ti = 2;
                        }
                    }
                    // 上一个盒子在右边
                    if (arr[index - 1].c_x > items.c_x) {
                        // 下一个盒子在右边
                        if (arr[index + 1].c_y == items.c_y && arr[index + 1].c_x < items.c_x) {
                            ti = 0;
                        }
                        // 下一个盒子在上边
                        if (arr[index + 1].c_y < items.c_y) {
                            ti = 5;
                        }
                        // 下一个盒子在下边
                        if (arr[index + 1].c_y > items.c_y) {
                            ti = 3;
                        }
                    }
                }

                // 外部盒子


                // 闪电

                var stateImg2 = new Laya.Sprite();
                stateImg2.zOrder = 1;
                stateImg2.c_x = items.c_x;
                stateImg2.c_y = items.c_y;
                stateImg2.width = 90;
                stateImg2.height = 90;
                stateImg2.pos(items._x - 4, items._y - 4);
                var Imgurl21 = Laya.loader.getRes(tp[ti]);
                Imgurl21.width = 90;
                Imgurl21.height = 90;
                var dx = 0;
                var dy = 0;
                if (stateImg2.c_x == 0) {
                    dx = 35;
                } else if (stateImg2.c_x == 7) {
                    dx = -35;
                } else if (stateImg2.c_y == 0) {
                    dy = 35;
                } else if (stateImg2.c_y == 9) {
                    dy = -35;
                }
                stateImg2.graphics.drawTexture(Imgurl21, dx, dy);
                _this3.LetterNum.addChild(stateImg2);
                var timer = setTimeout(function () {
                    stateImg2.graphics.clear();
                    window.clearTimeout(timer);
                }, 120);
            });
        }
    }, {
        key: 'makeNullBox',
        value: function makeNullBox(ca) {
            var stateImg1 = new Laya.Sprite();
            stateImg1.width = 95;
            stateImg1.height = 95;
            stateImg1.pos(ca._x, ca._y);

            var caImg = ca.Imsrc;
            ca.graphics.clear();

            stateImg1.innerHTML = this.empty;
            stateImg1.c_x = ca.c_x;
            stateImg1.c_y = ca.c_y;

            this.cellArray[ca.c_y][ca.c_x] = stateImg1;
            this.LetterNum.addChild(stateImg1);
        }
    }, {
        key: 'tryMatch',
        value: function tryMatch(ca, cb) {
            var _this4 = this;

            if (ca == cb) {
                this.uniquireFilter(ca, cb);
                return;
            }

            if (ca.innerHTML !== cb.innerHTML) {
                this.uniquireFilter(ca, cb);
                return;
            }
            var pathStack = [ca];
            var found = false;
            var nexts = this.neibors(ca, cb);

            for (var i = 0; i < nexts.length; i++) {

                if (this.findPath(nexts[i], cb, pathStack, 0)) {
                    found = true;
                    break;
                }
            }
            if (!found) {
                this.uniquireFilter(ca, cb);
                return;
            } else {
                this.pathStack = pathStack;
                var coin = "comp/lining.mp3";
                laya.media.SoundManager.playSound(coin);
                this.makepath(pathStack);
                this.changeImg(ca);
                this.changeImg(cb);
            }
            // 这里是移除图片
            // setTimeout(this.drawPath, 10, pathStack);
            this.count -= 2;
            if (this.count < 2) {
                var timers = setTimeout(function () {
                    Laya.timer.clear(_this4, _this4.timers);
                    _this4.successed();
                    clearTimeout(timers);
                }, 550);

                // alert('You win!');
            }
        }
    }, {
        key: 'neibors',
        value: function neibors(c, target) {
            // let c_x = Math.floor((c.x + 90) / 90);
            // let c_y = Math.floor((c.y -90) / 90);
            var c_x = c.c_x;
            var c_y = c.c_y;
            var t_x = target.c_x;
            var t_y = target.c_y;

            var cindex = 0;

            if (c_x < t_x) {
                if (c_y <= t_y) {
                    cindex = 0;
                }
                if (c_y > t_y) {
                    cindex = 2;
                }
            }
            if (c_x > t_x || c_x == t_x) {
                if (c_y <= t_y) {
                    cindex = 1;
                } else {
                    cindex = 3;
                }
            }
            var caseObg = [[this.fc(c_x + 1, c_y), this.fc(c_x, c_y + 1), this.fc(c_x, c_y - 1), this.fc(c_x - 1, c_y)], [this.fc(c_x - 1, c_y), this.fc(c_x, c_y - 1), this.fc(c_x, c_y + 1), this.fc(c_x + 1, c_y)], [this.fc(c_x, c_y + 1), this.fc(c_x + 1, c_y), this.fc(c_x - 1, c_y), this.fc(c_x, c_y - 1)], [this.fc(c_x, c_y - 1), this.fc(c_x + 1, c_y), this.fc(c_x - 1, c_y), this.fc(c_x, c_y + 1)]];
            var neiborArr = [];

            neiborArr = caseObg[cindex];
            return neiborArr;
        }
    }, {
        key: 'fc',
        value: function fc(x, y) {
            if (x < 0 || x > this.nx + 1 || y < 0 || y > this.ny + 1) {
                return null;
            }
            return this.cellArray[y][x];
        }

        // 图片路径匹配，消除动作

    }, {
        key: 'findPath',
        value: function findPath(c, target, pathStack, trunCount) {
            if (!c) {
                return false;
            }
            var c_2 = pathStack[pathStack.length - 2];
            if (c_2 && c_2.x != c.x && c_2.y != c.y) {
                if (++trunCount > 2) {
                    return false;
                }
            }
            if (c == target) {
                pathStack.push(c);
                return true;
            }
            if (c.innerHTML != this.empty) {
                return false;
            }
            if (pathStack.indexOf(c) >= 0) {
                return false;
            }
            pathStack.push(c);
            var nexts = this.neibors(c, target);
            for (var i = 0; i < nexts.length; i++) {
                if (this.findPath(nexts[i], target, pathStack, trunCount)) {
                    return true;
                }
            }
            pathStack.pop();
            return false;
        }
    }, {
        key: 'clearPath',
        value: function clearPath(path) {
            for (var i = 0; i < path.length; i++) {
                // path[i].setAttribute('class', path[i].getAttribute('class').replace(' showPath', ''));
            }
        }
    }, {
        key: 'drawPath',
        value: function drawPath(path) {
            // 这里出发消除动作
            for (var i = 0; i < path.length; i++) {
                // console.log('1234234', path)
                // path[i].setAttribute('class', path[i].getAttribute('class') + ' showPath');
            }
            setTimeout(this.clearPath, 150, path);
        }
        // 设置滤镜集合为发光滤镜

    }, {
        key: 'applayFilter',
        value: function applayFilter(ape) {
            var glowFilter = new Laya.GlowFilter("#ff0", 30, 0, 0);
            ape.filters = [glowFilter];
        }
        // 取消高亮

    }, {
        key: 'uniquireFilter',
        value: function uniquireFilter(ca, cb) {
            this.makeImg(ca);
            this.makeImg(cb);
        }
    }, {
        key: 'makeImg',
        value: function makeImg(ca) {
            var glowFilter = new Laya.GlowFilter("#ff0000", 0, 0, 0);
            ca.filters = [glowFilter];
        }
    }, {
        key: 'setbars',
        value: function setbars(pr) {
            var _this5 = this;

            this.Mprogress.value = 1;
            // 进度条
            var it = this.maxTime;
            // this.onLoading(pr)
            this.timers = function () {
                _this5.Mprogress.value -= 1 / it;
                _this5.maxTime--;
                if (_this5.maxTime > 59) {
                    var m = Math.floor(_this5.maxTime / 60);
                    var s = _this5.maxTime - m * 60;
                    if (s < 10) {
                        _this5.myTime.text = '0' + m + ':0' + s;
                    } else {
                        _this5.myTime.text = '0' + m + ':' + s;
                    }
                } else if (_this5.maxTime >= 10 && _this5.maxTime <= 59) {
                    _this5.myTime.text = '00:' + _this5.maxTime;
                } else if (_this5.maxTime < 10 && _this5.maxTime > 0) {
                    _this5.myTime.text = '00:0' + _this5.maxTime;
                } else if (_this5.maxTime <= 0) {
                    _this5.myTime.text = '00:00';

                    Laya.timer.clear(_this5, _this5.timers);
                    _this5.failed();
                    return false;
                }
            };
            Laya.timer.clear(this, this.timers);
            Laya.timer.loop(1000, this, this.timers);
            // console.log("timerend")
        }
        // 失败

    }, {
        key: 'failed',
        value: function failed() {
            var _this6 = this;

            if (this.isSuccess) {
                return false;
            }
            var coin = "https://img.guoanfamily.com/yuandan19/fail.mp3";
            laya.media.SoundManager.playSound(coin);
            //  创建一个颜色滤镜对象，灰图
            var grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0, 0.3086, 0.6094, 0.0820, 0, 0, 0.3086, 0.6094, 0.0820, 0, 0, 0, 0, 0, 1, 0];
            var grayscaleFilter = new Laya.ColorFilter(grayscaleMat);
            // 模糊
            var blurFilter = new Laya.BlurFilter();
            blurFilter.strength = 10;
            this.LetterNum.filters = [grayscaleFilter, blurFilter];
            var stateImg22 = new Laya.Sprite();

            stateImg22.width = 640;
            stateImg22.height = 1136;
            stateImg22.pos(0, 0);
            var Imgurl21 = Laya.loader.getRes("comp/failed.png");
            Imgurl21.width = 640;
            Imgurl21.height = 1136;
            stateImg22.graphics.drawTexture(Imgurl21, 0, 0);
            Laya.stage.addChild(stateImg22);
            stateImg22.on(laya.events.Event.MOUSE_UP, this, function () {
                stateImg22.zOrder = "-1";
                stateImg22.graphics.clear();
                Laya.Scene.open("peopleList.scene", true, 10000);
                _this6.removeSelf();
            });
        }
        // 成功

    }, {
        key: 'successed',
        value: function successed() {
            var _this7 = this;

            var coin = "https://img.guoanfamily.com/yuandan19/success.mp3";
            laya.media.SoundManager.playSound(coin);
            this.isSuccess = true;
            // this.mytimer.clearAll();
            //Laya.timer.clearAll();
            // Laya.timer.clear(this, this.timers);
            // 模糊
            var blurFilter = new Laya.BlurFilter();
            blurFilter.strength = 10;
            this.LetterNum.filters = [blurFilter];
            var success2 = new Laya.Sprite();

            success2.width = 640;
            success2.height = 1136;
            success2.pos(0, 0);
            var Imgurl21 = Laya.loader.getRes("comp/success.png");
            Imgurl21.width = 640;
            Imgurl21.height = 1136;
            success2.graphics.drawTexture(Imgurl21, 0, 0);
            Laya.stage.addChild(success2);
            success2.on(laya.events.Event.MOUSE_UP, this, function () {
                success2.zOrder = "-1";
                success2.graphics.clear();
                Laya.Scene.open("peopleList.scene", true, _this7.maxTimeTemp - _this7.maxTime);
                _this7.removeSelf();
            });
            // 保存

            // let dataTime= new Date()
            // let year = dataTime.getFullYear();
            // let month = dataTime.getMonth()+1;
            // let date = dataTime.getDate()
            // if(month<10){
            //     month = '0'+month
            // }
            // if(date<10){
            //     date = "0"+date
            // }
            var username = localStorage.getItem("nickname");
            var imageurl = localStorage.getItem("headimgurl");
            var openId = localStorage.getItem("openid");
            if (!username) {
                username: "";
            }
            if (!imageurl) {
                imageurl = "https://img.guoanfamily.com/touxiang.png";
            }
            if (!openId) {
                openId = "";
            }
            axios.post("https://mt.guoanfamily.com/pmgame/PmRankingSave", {
                // axios.post("http://172.16.44.233:9100/PmRankingSave",{
                "username": username,
                "costtime": this.maxTimeTemp - this.maxTime,
                // "answerday":`${year}-${month}-${date}`,
                'imageurl': imageurl,
                'openid': openId
            }).then(function (res) {
                console.log(123, res);
            });
        }
    }]);

    return LetterNum;
}(Laya.Scene);

exports.default = LetterNum;

},{}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Letterfirst = function (_Laya$Scene) {
	_inherits(Letterfirst, _Laya$Scene);

	function Letterfirst() {
		_classCallCheck(this, Letterfirst);

		// 引入图片
		var _this = _possibleConstructorReturn(this, (Letterfirst.__proto__ || Object.getPrototypeOf(Letterfirst)).call(this));

		var asset = [{
			url: ["https://img.guoanfamily.com/yuandan19/biejing.m4a"],
			type: Laya.Loader.SOUND
		}];
		Laya.loader.load(asset, laya.utils.Handler.create(_this, _this.InitializationFn));
		return _this;
	}

	_createClass(Letterfirst, [{
		key: 'onEnable',
		value: function onEnable() {

			var onShareComplete = function onShareComplete() {
				(function () {
					var wxshare = new Laya.HttpRequest();
					wxshare.once(Laya.Event.COMPLETE, this, processHandler);
					wxshare.once(Laya.Event.ERROR, this, function () {});
					wxshare.send('https://www.guoanfamily.com/openweixin/jsapi/getJsapiSignature?local_url=' + encodeURIComponent(location.href), {}, 'post', 'json', ["Content-Type", "application/json;charset=UTF-8"]);
					function processHandler(response) {
						wx.config({
							debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
							appId: response.appid, // 必填，公众号的唯一标识
							timestamp: parseInt(response.timestamp), // 必填，生成签名的时间戳
							nonceStr: response.noncestr, // 必填，生成签名的随机串
							signature: response.signature, // 必填，签名，见附录1
							jsApiList: ['onMenuShareAppMessage', 'onMenuShareTimeline'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
						});
						wx.ready(function () {

							// 2. 分享接口
							// 2.1 监听“分享给朋友”，按钮点击、自定义分享内容及分享结果接口
							wx.onMenuShareAppMessage({
								title: '迎元旦，连连看', //标题
								desc: "迎元旦，连连看", //描述
								link: "https://mt.guoanfamily.com/xiaoxiaole", //连接地址指打开分享时页面地址                        
								imgUrl: "https://img.guoanfamily.com/yuandan19/firstP.jpg", //图片
								trigger: function trigger(res) {
									// 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
								},
								success: function success(res) {},
								cancel: function cancel(res) {},
								fail: function fail(res) {}
							});
							//分享到朋友圈
							wx.onMenuShareTimeline({
								title: '迎元旦，连连看', //标题
								desc: "迎元旦，连连看", //描述
								link: "https://mt.guoanfamily.com/xiaoxiaole", //连接地址指打开分享时页面地址
								imgUrl: "https://img.guoanfamily.com/yuandan19/firstP.jpg", //图片
								trigger: function trigger(res) {
									// 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
								},
								success: function success(res) {},
								cancel: function cancel(res) {},
								fail: function fail(res) {}
							});
							wx.error(function (res) {
								console.error(res);
							});
						});
					}
				})();
			};
			onShareComplete();
			this.first.on(laya.events.Event.MOUSE_UP, this, this.firstCkick);
		}
	}, {
		key: 'firstCkick',
		value: function firstCkick() {
			// document.querySelector("#music_play_filter").pause();  
			document.querySelector("#bgMusicBtn").classList.add("circle");
			document.querySelector("#bgMusicBtn").classList.add("music");
			var coin = "https://img.guoanfamily.com/yuandan19/biejing.m4a";
			window.SoundManager = laya.media.SoundManager;
			window.SoundManager.playMusic(coin);

			// window.removeChannel = laya.media.removeChannel

			// document.querySelector("#music_play_filter").play();

			document.querySelector("#bgMusicBtn").onclick = function () {
				if (this.classList.contains("music")) {
					window.SoundManager.stopMusic();
					// document.querySelector("#music_play_filter").pause();
					this.classList.remove("music");
				} else {
					window.SoundManager.playMusic(coin);

					// document.querySelector("#music_play_filter").play();
					this.classList.add("music");
				}
			};
			Laya.Scene.open("Lettersecond.scene");
		}
	}, {
		key: 'InitializationFn',
		value: function InitializationFn() {}
	}, {
		key: 'onComplete',
		value: function onComplete(e) {
			console.log(1111, e);
		}
	}]);

	return Letterfirst;
}(Laya.Scene);

exports.default = Letterfirst;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Lettersecond = function (_Laya$Scene) {
    _inherits(Lettersecond, _Laya$Scene);

    function Lettersecond() {
        _classCallCheck(this, Lettersecond);

        return _possibleConstructorReturn(this, (Lettersecond.__proto__ || Object.getPrototypeOf(Lettersecond)).call(this));
    }

    _createClass(Lettersecond, [{
        key: "onEnable",
        value: function onEnable() {
            document.querySelector("#bgMusicBtn").classList.add("music");
            document.querySelector("#bgMusicBtn").classList.add("circle");

            this.sbtn.on(laya.events.Event.MOUSE_UP, this, this.firstCkick);
        }
    }, {
        key: "firstCkick",
        value: function firstCkick() {
            document.querySelector("#bgMusicBtn").classList.remove("music");
            document.querySelector("#bgMusicBtn").classList.remove("circle");
            Laya.Scene.open("LetterNum.scene");
        }
    }]);

    return Lettersecond;
}(Laya.Scene);

exports.default = Lettersecond;

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Loading = function (_Laya$Scene) {
    _inherits(Loading, _Laya$Scene);

    function Loading() {
        _classCallCheck(this, Loading);

        var _this = _possibleConstructorReturn(this, (Loading.__proto__ || Object.getPrototypeOf(Loading)).call(this));

        var asset = [{
            url: ["comp/001.png", "comp/002.png", "comp/003.png", "comp/004.png", "comp/005.png", "comp/006.png", "comp/007.png", "comp/008.png", "comp/009.png", "comp/sandian.png", "comp/p0.png", "comp/p1.png", "comp/p2.png", "comp/p3.png", "comp/p4.png", "comp/p5.png", "comp/success.png", "comp/failed.png"],
            type: Laya.Loader.IMAGE
        }, {

            url: ["comp/lining.mp3", 'https://img.guoanfamily.com/yuandan19/success.mp3', "https://img.guoanfamily.com/yuandan19/fail.mp3", "https://img.guoanfamily.com/yuandan19/biejing.m4a"],
            type: Laya.Loader.SOUND
        }];
        // 加载图片。
        Laya.loader.load(asset, laya.utils.Handler.create(_this, _this.InitializationFn), laya.utils.Handler.create(_this, _this.onLoading, null, false), Laya.Loader);
        // 侦听加载失败
        Laya.loader.on(Event.ERROR, _this, _this.onError);
        return _this;
    }

    _createClass(Loading, [{
        key: "InitializationFn",
        value: function InitializationFn() {}
        // 加载进度侦听器

    }, {
        key: "onLoading",
        value: function onLoading(progress) {

            var num = Math.floor(progress * 100);
            this.Ltext.text = num + "%";

            this.Lbar.value = progress;
            if (progress == 1) {
                var timer01 = setTimeout(function () {
                    clearTimeout(timer01);
                    Laya.Scene.open("Letterfirst.scene");
                }, 50);
            }
        }
        // 加载失败

    }, {
        key: "onError",
        value: function onError(err) {
            console.log("加载失败: " + err);
        }
    }]);

    return Loading;
}(Laya.Scene);

exports.default = Loading;

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var peopleList = function (_Laya$Scene) {
    _inherits(peopleList, _Laya$Scene);

    function peopleList() {
        _classCallCheck(this, peopleList);

        var _this = _possibleConstructorReturn(this, (peopleList.__proto__ || Object.getPrototypeOf(peopleList)).call(this));

        _this.useMinis = 0;
        _this.useSconds = "";
        return _this;
    }

    _createClass(peopleList, [{
        key: "onOpened",
        value: function onOpened(num) {
            if (num >= 10000) {
                // this.filText="无成绩，请再战";
                this.timeBox.zOrder = -1;
                this.fileTime.zOrder = 3;
                return false;
            } else {
                this.timeBox.zOrder = 1;
                this.fileTime.zOrder = -1;
            }
            if (!num || num <= 1) {
                document.querySelector(".MYimg").style.display = "none";
                Laya.Scene.open("LetterNum.scene");
            }
            if (num > 59) {
                this.useMinis = Math.floor(num / 60);
                this.useSconds = num - this.useMinis * 60;
                if (this.useSconds < 10) {
                    this.useSconds = "0" + this.useSconds;
                }
            } else {
                this.useSconds = num;
                this.useMinis = 0;
            }
            this.minis.text = this.useMinis + "";
            this.sconds.text = this.useSconds + "";
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            var _this2 = this;

            // let dataTime= new Date()
            // let year = dataTime.getFullYear();
            // let month = dataTime.getMonth()+1;
            // let date = dataTime.getDate()
            // if(month<10){
            //     month = '0'+month
            // }
            // if(date<10){
            //     date = "0"+date
            // }
            // let Times = `${year}-${month}-${date}`
            document.querySelector(".MYimg").style.display = "block";
            axios.get("https://mt.guoanfamily.com/pmgame/GetPmRanking").then(function (res) {

                if (res.data.Code == 200) {
                    var List = [];
                    res.data.Data.forEach(function (item, index) {
                        item.costtime = Math.floor(item.costtime / 60) + "\u5206" + item.costtime % 60 + "\u79D2";
                        var url = "";
                        if (index < 3) {
                            url = "https://img.guoanfamily.com/yuandan19/NO" + (index + 1) + ".png";
                        }

                        var imageurl = item.imageurl;
                        if (!imageurl) {
                            imageurl = "https://img.guoanfamily.com/yuandan19/touxiang.jpg";
                        }

                        List.push({
                            NoImg: url,
                            mNo: index + 1 + "",
                            mlabel: item.username,
                            mtime: item.costtime,
                            head_img: imageurl
                        });
                    });
                    _this2.m_list.array = List;
                }
            });
            var oneDailog = this.getChildByName('indexBottomDialog1');
            this.shearB.on(laya.events.Event.MOUSE_UP, this, this.toshear);

            oneDailog.on(laya.events.Event.MOUSE_UP, this, function () {
                oneDailog.zOrder = -1;
                document.querySelector(".MYimg").style.display = "block";
            });
            this.playAgain.on(laya.events.Event.MOUSE_UP, this, function () {
                document.querySelector(".MYimg").style.display = "none";
                Laya.Scene.open("LetterNum.scene");
                _this2.removeSelf();
            });
        }
    }, {
        key: "toshear",
        value: function toshear() {
            var oneDailog = this.getChildByName('indexBottomDialog1');
            oneDailog.zOrder = 3999;
            document.querySelector(".MYimg").style.display = "none";
        }
    }]);

    return peopleList;
}(Laya.Scene);

exports.default = peopleList;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
